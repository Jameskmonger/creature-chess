FROM node:12-alpine AS node

FROM node AS builder

WORKDIR /usr/src/cc-server

# root dependencies

COPY package.json package-lock.json ./
RUN npm ci --loglevel notice

# package dependencies

COPY packages/shoki-board/package*.json ./packages/shoki-board/
COPY packages/shoki-engine/package*.json ./packages/shoki-engine/
COPY packages/shoki-networking/package*.json ./packages/shoki-networking/

COPY packages/cc-auth/package*.json ./packages/cc-auth/
COPY packages/cc-battle/package*.json ./packages/cc-battle/
COPY packages/cc-models/package*.json ./packages/cc-models/
COPY packages/cc-data/package*.json ./packages/cc-data/
COPY packages/cc-networking/package*.json ./packages/cc-networking/

COPY packages/cc-gamemode/package*.json ./packages/cc-gamemode/
COPY packages/server-game/package*.json ./packages/server-game/

COPY lerna.json ./
RUN npm run bootstrap

FROM builder as built

COPY tsconfig.json .

# build dependencies - doing this manually improves docker caching
COPY packages/shoki-board ./packages/shoki-board
RUN npm run build -- --scope @shoki/board
COPY packages/shoki-engine ./packages/shoki-engine
RUN npm run build -- --scope @shoki/engine
COPY packages/shoki-networking ./packages/shoki-networking
RUN npm run build -- --scope @shoki/networking

COPY packages/cc-models ./packages/cc-models
RUN npm run build -- --scope @creature-chess/models
COPY packages/cc-data ./packages/cc-data
RUN npm run build -- --scope @creature-chess/data
COPY packages/cc-battle ./packages/cc-battle
RUN npm run build -- --scope @creature-chess/battle
COPY packages/cc-gamemode ./packages/cc-gamemode
RUN npm run build -- --scope @creature-chess/gamemode
COPY packages/cc-networking ./packages/cc-networking
RUN npm run build -- --scope @creature-chess/networking
COPY packages/cc-auth ./packages/cc-auth
RUN npm run build -- --scope @creature-chess/auth

# build main package
COPY packages/server-game ./packages/server-game
RUN npm run build -- --scope @creature-chess/server-game

FROM built as binary

# run script to create binary
COPY scripts/ ./scripts/
RUN npm run build:create-bin:shoki
RUN npm run build:create-bin:server

FROM node

WORKDIR /usr/src/cc-server-bin

# copy binary only
COPY --from=binary /usr/src/cc-server/bin/ ./

EXPOSE 3000

CMD [ "node", "server-game/lib/index.js", "3000" ]
