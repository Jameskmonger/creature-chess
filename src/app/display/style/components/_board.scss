.chessboard {
    position: relative;
    margin-bottom: 0.5rem;
}

.bench {
    position: relative;
}

.tile-row {
    width: 100%;
    box-sizing: border-box;
    line-height: 0;
    white-space: nowrap;
}

.tile {
    position: relative;
    display: inline-block;
    box-sizing: border-box;
    user-select: none;

    &.selected {
        box-sizing: border-box;
        border: 2px solid #ff5200;
    }

    .overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;

        &.not-allowed {
            background: #484848;
            opacity: 0.4;
        }
    }

    &.bench {
        .image {
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    }
}

.positionable-piece {
    position: absolute;
    /* stylelint-disable-next-line */
    transition: all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1) 0s;
}

.opponent-board-placeholder {
    display: flex;
    width: 100%;
    box-sizing: border-box;
    padding: 0 0.4rem;
    font-size: 1rem;
    text-align: center;
    background: #717171;
    border: 3px solid #2d2d2d;

    .o-group {
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;

        &.stretch {
            flex: 1;
            margin-right: 0.4rem;
            justify-content: center;
        }
    }
}

.piece {
    position: relative;
    z-index: $piece-z-index;
    width: 100%;
    height: 100%;

    .image {
        position: absolute;
        bottom: 20%;
        left: 9%;
        width: 80%;
        height: 80%;
    }

    .piece-meta {
        position: absolute;
        bottom: 0;
        display: flex;
        flex-direction: row;
        width: 100%;
        height: 18%;
    }

    $attack-duration: 200ms;

    &.attack-basic {
        $attack-movement-distance-multiplier: 3px;
        $attack-movement-distance: calc(#{$attack-movement-distance-multiplier} * var(--attackPower));
        @keyframes attack-basic {
            0% {
                top: 0;
                left: 0;
            }

            50% {
                top: calc(#{$attack-movement-distance} * var(--attackYDirection));
                left: calc(#{$attack-movement-distance} * var(--attackXDirection));
            }

            100% {
                top: 0;
                left: 0;
            }
        }
        animation-name: attack-basic;
        animation-duration: $attack-duration;
    }

    .projectile {
        display: none;
    }

    $projectile-size: 10px;

    &.attack-shoot .projectile {
        @keyframes attack-shoot {
            0% {
                top: calc(50% - (#{$projectile-size} / 2));
                left: calc(50% - (#{$projectile-size} / 2));
            }

            100% {
                top: calc(((100% * var(--attackDistance) * var(--attackYDirection)) + 50%) - (#{$projectile-size} / 2));
                left: calc(((100% * var(--attackDistance) * var(--attackXDirection)) + 50%) - (#{$projectile-size} / 2));
            }
        }
        position: absolute;
        display: block;
        animation-name: attack-shoot;
        animation-duration: $attack-duration;
    }

    &.hit {
        $hit-rotation-multiplier: 1deg;
        $hit-rotation: calc(#{$hit-rotation-multiplier} * var(--hitPower));
        @keyframes hit {
            0% { transform: rotate(0deg); }
            25% { transform: rotate(calc(#{$hit-rotation} * -1)); }
            75% { transform: rotate($hit-rotation); }
            100% { transform: rotate(0deg); }
        }
        animation-name: hit;
        animation-duration: 200ms;
    }

    @keyframes dying {
        100% { transform: scale(0); }
    }

    &.dying {
        animation-name: dying;
        animation-duration: 1000ms;
        animation-fill-mode: forwards;
        animation-iteration-count: 1;
    }
}
