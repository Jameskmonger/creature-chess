.chessboard {
    position: relative;
    margin-bottom: 0.5rem;
}

.bench {
    position: relative;
}

.tile-row {
    width: 100%;
    box-sizing: border-box;
    line-height: 0;
    white-space: nowrap;
}

.tile {
    position: relative;
    display: inline-block;
    box-sizing: border-box;
    user-select: none;

    &.selected {
        box-sizing: border-box;
        border: 2px solid #ff5200;
    }

    .overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;

        &.not-allowed {
            background: #484848;
            opacity: 0.4;
        }
    }

    &.bench {
        .image {
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    }
}

.positionable-piece {
    position: absolute;
}

.opponent-board-placeholder {
    width: 100%;
    box-sizing: border-box;
    text-align: center;
    background: #717171;
    border: 3px solid #2d2d2d;

    .label {
        display: block;
        padding-top: 2em;
        margin-bottom: 2em;
        font-family: Arial, sans-serif;
        font-size: 1.3em;
        color: #fff;
    }
}

.piece {
    position: relative;
    z-index: $piece-z-index;
    width: 100%;
    height: 100%;

    .image {
        position: absolute;
        bottom: 20%;
        left: 9%;
        width: 80%;
        height: 80%;
    }

    .piece-meta {
        position: absolute;
        bottom: 0;
        display: flex;
        flex-direction: row;
        width: 100%;
        height: 30%;
    }

    $move-duration: 300ms;

    &.move {
        @keyframes move {
            0% {
                top: calc(#{$tile-size} * var(--moveYDirection) * -1);
                left: calc(#{$tile-size} * var(--moveXDirection) * -1);
            }

            100% {
                top: 0;
                left: 0;
            }
        }
        animation-name: move;
        animation-duration: $move-duration;
    }

    $attack-duration: 200ms;

    &.attack-basic {
        $attack-movement-distance-multiplier: 3px;
        $attack-movement-distance: calc(#{$attack-movement-distance-multiplier} * var(--attackPower));
        @keyframes attack-basic {
            0% {
                top: 0;
                left: 0;
            }

            50% {
                top: calc(#{$attack-movement-distance} * var(--attackYDirection) * -1);
                left: calc(#{$attack-movement-distance} * var(--attackXDirection) * -1);
            }

            100% {
                top: 0;
                left: 0;
            }
        }
        animation-name: attack-basic;
        animation-duration: $attack-duration;
    }

    .projectile {
        display: none;
    }

    &.attack-shoot .projectile {
        $half-tile-size: calc(#{$tile-size} / 2);
        @keyframes attack-shoot {
            0% {
                top: $half-tile-size;
                left: $half-tile-size;
            }

            100% {
                top: calc(#{$tile-size} * var(--attackYDirection) * -1 + #{$half-tile-size});
                left: calc(#{$tile-size} * var(--attackXDirection) * -1 + #{$half-tile-size});
            }
        }
        position: absolute;
        display: block;
        animation-name: attack-shoot;
        animation-duration: $attack-duration;
    }

    &.hit {
        $hit-rotation-multiplier: 1deg;
        $hit-rotation: calc(#{$hit-rotation-multiplier} * var(--hitPower));
        @keyframes hit {
            0% { transform: rotate(0deg); }
            25% { transform: rotate(calc(#{$hit-rotation} * -1)); }
            75% { transform: rotate($hit-rotation); }
            100% { transform: rotate(0deg); }
        }
        animation-name: hit;
        animation-duration: 200ms;
    }

    &.celebrate {
        $celebrate-movement-distance: 20px;
        @keyframes celebrate {
            25% { transform: translate($celebrate-movement-distance, -$celebrate-movement-distance) skewX(-20deg); }
            50% { transform: translate(0, 0) skewX(0); }
            75% { transform: translate(-$celebrate-movement-distance, -$celebrate-movement-distance) skewX(20deg); }
        }
        animation-name: celebrate;
        animation-duration: 1000ms;
        animation-timing-function: linear;
        animation-iteration-count: infinite;
    }

    &.dying {
        @keyframes dying {
            100% { transform: scale(0); }
        }
        animation-name: dying;
        animation-duration: 1000ms;
        animation-iteration-count: 1;
    }
}
